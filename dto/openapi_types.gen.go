// Package dto provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package dto

// Defines values for APIResponseFormatStatus.
const (
	Error   APIResponseFormatStatus = "error"
	Failure APIResponseFormatStatus = "failure"
	Success APIResponseFormatStatus = "success"
)

// Defines values for ChannelCategory.
const (
	ChannelCategoryCHANNEL ChannelCategory = "CHANNEL"
	ChannelCategoryGROUP   ChannelCategory = "GROUP"
	ChannelCategoryPEER    ChannelCategory = "PEER"
)

// Defines values for NewChannelCategory.
const (
	NewChannelCategoryCHANNEL NewChannelCategory = "CHANNEL"
	NewChannelCategoryGROUP   NewChannelCategory = "GROUP"
	NewChannelCategoryPEER    NewChannelCategory = "PEER"
)

// APIResponseFormat defines model for APIResponseFormat.
type APIResponseFormat struct {
	Data    map[string]interface{} `json:"data"`
	Message string                 `json:"message"`

	// API Response Status:
	//   * `success` - Used when the request was processed successfully. Typically `2XX`.
	//   * `failure` - Used when it's the client's fault i.e.
	//               They can change the request parameters and retry. Typically `4XX`.
	//   * `error` - Used for unexpected server errors. Typically `5XX`.
	Status APIResponseFormatStatus `json:"status"`
}

// API Response Status:
//   * `success` - Used when the request was processed successfully. Typically `2XX`.
//   * `failure` - Used when it's the client's fault i.e.
//               They can change the request parameters and retry. Typically `4XX`.
//   * `error` - Used for unexpected server errors. Typically `5XX`.
type APIResponseFormatStatus string

// Channel defines model for Channel.
type Channel struct {
	Category    ChannelCategory `json:"category"`
	Description *string         `json:"description,omitempty"`
	Id          string          `json:"id"`
	Name        string          `json:"name"`
}

// ChannelCategory defines model for Channel.Category.
type ChannelCategory string

// Membership defines model for Membership.
type Membership struct {
	ChannelID *string `json:"channelID,omitempty"`
	Id        string  `json:"id"`
	UserID    *string `json:"userID,omitempty"`
}

// NewChannel defines model for NewChannel.
type NewChannel struct {
	Category    NewChannelCategory `json:"category"`
	Description *string            `json:"description,omitempty"`
	Name        string             `json:"name"`
}

// NewChannelCategory defines model for NewChannel.Category.
type NewChannelCategory string

// NewMembership defines model for NewMembership.
type NewMembership struct {
	ChannelID *string `json:"channelID,omitempty"`
	UserID    *string `json:"userID,omitempty"`
}

// NewToken defines model for NewToken.
type NewToken struct {
	UserID string `json:"userID"`
}

// NewUser defines model for NewUser.
type NewUser struct {
	Name string `json:"name"`
}

// TokenResponse defines model for TokenResponse.
type TokenResponse struct {
	Access string `json:"access"`
}

// User defines model for User.
type User struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetUserAccessTokenJSONBody defines parameters for GetUserAccessToken.
type GetUserAccessTokenJSONBody = NewToken

// CreateChannelJSONBody defines parameters for CreateChannel.
type CreateChannelJSONBody = NewChannel

// CreateMembershipJSONBody defines parameters for CreateMembership.
type CreateMembershipJSONBody = NewMembership

// CreateUserJSONBody defines parameters for CreateUser.
type CreateUserJSONBody = NewUser

// GetUserAccessTokenJSONRequestBody defines body for GetUserAccessToken for application/json ContentType.
type GetUserAccessTokenJSONRequestBody = GetUserAccessTokenJSONBody

// CreateChannelJSONRequestBody defines body for CreateChannel for application/json ContentType.
type CreateChannelJSONRequestBody = CreateChannelJSONBody

// CreateMembershipJSONRequestBody defines body for CreateMembership for application/json ContentType.
type CreateMembershipJSONRequestBody = CreateMembershipJSONBody

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = CreateUserJSONBody
