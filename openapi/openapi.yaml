openapi: '3.0.2'
info:
  title: Semezana API Developer Documentation
  description: |
    A chat server
  version: 0.0.1
  contact:
    name: Charles Muchogo
servers:
  - url: http://localhost:8080
    description: |
      Sandbox API
tags:
  - name: Auth
    description: |
      Authentication.
  - name: Users
    description: |
      Users
  - name: Channels
    description: |
      Channels
  - name: Messages
    description: |
      Messages
paths:
  /v1/stream:
    get:
      operationId: websocket
      tags: 
       - Users
      summary: Opens a WebSocket connection
      description: |
        websocket connection
      # security:
      #   - apiKeyAuth: []
      responses:
        '200':
          description: |
            Success
        '5XX':
          description: |
            Unexpected server error.
  /v1/channels:
    get:
      operationId: getChannels
      tags: 
       - Channels
      summary: Retrieve all channels
      description: |
        list all channels
      # security:
      #   - apiKeyAuth: []
      #     bearerAuth: []
      responses:
        '200':
          description: |
            Success listing channels
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/APIResponseFormat'
                  - type: object
                    properties:
                      status:
                        example: success
                      message:
                        example: OK
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Channel'
        '401':
          description: |
            Missing or incorrect access credentials.
        '5XX':
          description: |
            Unexpected server error.
    post:
      operationId: createChannel
      tags: 
       - Channels
      summary: Create a channel
      description: |
        create a channel
      # security:
      #   - apiKeyAuth: []
      #     bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewChannel'
      responses:
        '201':
          description: |
            Success creating channel
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/APIResponseFormat'
                  - type: object
                    properties:
                      status:
                        example: success
                      message:
                        example: OK
                      data:
                        $ref: '#/components/schemas/Channel'
        '401':
          description: |
            Missing or incorrect access credentials.
        '5XX':
          description: |
            Unexpected server error.
  /v1/channels/{channelID}:
    get:
      operationId: getChannelById
      tags: 
       - Channels
      summary: Retrieve a channel
      description: |
        retrieve a channel
      # security:
      #   - apiKeyAuth: []
      #     bearerAuth: []
      parameters:
        - name: channelID
          in: path
          description: /
            remove a channel
          schema:
            type: string
          required: true
      responses:
        '200':
          description: |
            Success retrieving channel
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/APIResponseFormat'
                  - type: object
                    properties:
                      status:
                        example: success
                      message:
                        example: OK
                      data:
                        $ref: '#/components/schemas/Channel'
        '401':
          description: |
            Missing or incorrect access credentials.
        '404':
          description: |
            Channel with the provided ID not found.
        '5XX':
          description: |
            Unexpected server error.
    delete:
      operationId: deleteChannelById
      tags: 
       - Channels
      summary: Delete a channel
      description: |
        delete a channel
      # security:
      #   - apiKeyAuth: []
      #     bearerAuth: []
      parameters:
        - name: channelID
          in: path
          description: /
            remove a channel
          schema:
            type: string
          required: true
        
      responses:
        '200':
          description: |
            Success deleting channel
        '401':
          description: |
            Missing or incorrect access credentials.
        '404':
          description: |
            Channel with the provided ID not found.
        '5XX':
          description: |
            Unexpected server error.
  /v1/channels/{channelID}/memberships:
    post:
      operationId: createMembership
      parameters:
        - name: channelID
          in: path
          description: /
            specifies the channel
          schema:
            type: string
          required: true
      tags: 
       - Channels
      summary: Create a membership
      description: |
        create a membership
      # security:
      #   - apiKeyAuth: []
      #     bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMembership'
      responses:
        '201':
          description: |
            Success creating a membership
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/APIResponseFormat'
                  - type: object
                    properties:
                      status:
                        example: success
                      message:
                        example: OK
                      data:
                        $ref: '#/components/schemas/Membership'
        '401':
          description: |
            Missing or incorrect access credentials.
        '5XX':
          description: |
            Unexpected server error.
  /v1/channels/{channelID}/memberships/{membershipID}:
    get:
      operationId: getMembershipById
      tags: 
       - Channels
      summary: Retrieve a membership
      description: |
        retrieve a membership
      # security:
      #   - apiKeyAuth: []
      #     bearerAuth: []
      parameters:
        - name: channelID
          in: path
          description: /
            specifies the channel
          schema:
            type: string
          required: true
        - name: membershipID
          in: path
          description: /
            specifies the membership
          schema:
            type: string
          required: true
      responses:
        '200':
          description: |
            Success retrieving membership
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/APIResponseFormat'
                  - type: object
                    properties:
                      status:
                        example: success
                      message:
                        example: OK
                      data:
                        $ref: '#/components/schemas/Membership'
        '401':
          description: |
            Missing or incorrect access credentials.
        '404':
          description: |
            Channel with the provided ID not found.
        '5XX':
          description: |
            Unexpected server error.
    delete:
      operationId: deleteMembershipById
      tags: 
       - Channels
      summary: Remove a membership
      description: |
        delete a channel
      # security:
      #   - apiKeyAuth: []
      #     bearerAuth: []
      parameters:
        - name: channelID
          in: path
          description: /
            specifies the channel
          schema:
            type: string
          required: true
        - name: membershipID
          in: path
          description: /
            specifies the membership
          schema:
            type: string
          required: true
        
      responses:
        '200':
          description: |
            Success deleting channel
        '401':
          description: |
            Missing or incorrect access credentials.
        '404':
          description: |
            Channel with the provided ID not found.
        '5XX':
          description: |
            Unexpected server error.
  /v1/users:
    get:
      operationId: getUsers
      tags: 
       - Users
      summary: Retrieve all users
      description: |
        listing users
      # security:
      #   - apiKeyAuth: []
      #     bearerAuth: []
      responses:
        '200':
          description: |
            Success creating user
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/APIResponseFormat'
                  - type: object
                    properties:
                      status:
                        example: success
                      message:
                        example: OK
                      data:
                        type: array
                        items: 
                          $ref: '#/components/schemas/User'
        '401':
          description: |
            Missing or incorrect access credentials.
        '5XX':
          description: |
            Unexpected server error.
    post:
      operationId: createUser
      tags: 
       - Users
      summary: Create a user
      description: |
        create a user
      # security:
      #   - apiKeyAuth: []
      #     bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: |
            Success creating user
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/APIResponseFormat'
                  - type: object
                    properties:
                      status:
                        example: success
                      message:
                        example: OK
                      data:
                        $ref: '#/components/schemas/User'
        '401':
          description: |
            Missing or incorrect access credentials.
        '5XX':
          description: |
            Unexpected server error.
  /v1/users/{userID}:
    get:
      operationId: getUserById
      tags: 
       - Users
      summary: Retrieve a user
      description: |
        retrieve a user
      # security:
      #   - apiKeyAuth: []
      #     bearerAuth: []
      parameters:
        - name: userID
          in: path
          description: /
            remove a user
          schema:
            type: string
          required: true
      responses:
        '200':
          description: |
            Success retrieving user
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/APIResponseFormat'
                  - type: object
                    properties:
                      status:
                        example: success
                      message:
                        example: OK
                      data:
                        $ref: '#/components/schemas/User'
        '401':
          description: |
            Missing or incorrect access credentials.
        '404':
          description: |
            User with the provided ID not found.
        '5XX':
          description: |
            Unexpected server error.
    delete:
      operationId: deleteUserById
      tags: 
       - Users
      summary: Delete a user
      description: |
        delete a user
      # security:
      #   - apiKeyAuth: []
      #     bearerAuth: []
      parameters:
        - name: userID
          in: path
          description: /
            remove a user
          schema:
            type: string
          required: true
        
      responses:
        '200':
          description: |
            Success deleting user
        '401':
          description: |
            Missing or incorrect access credentials.
        '404':
          description: |
            User with the provided ID not found.
        '5XX':
          description: |
            Unexpected server error.
components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-SEMEZANA-KEY
      x-go-type: dto.ApiKeyAuthScopes
      x-go-type-import:
        path: github.com/Muchogoc/semezana/dto
    apiSecretAuth:
      type: apiKey
      in: header
      name: X-SEMEZANA-SECRET
      x-go-type: dto.ApiKeyAuthScopes
      x-go-type-import:
        path: github.com/Muchogoc/semezana/dto
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-go-type: dto.BearerAuthScopes
      x-go-type-import:
        path: github.com/Muchogoc/semezana/dto
  schemas:
    APIResponseFormat:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - failure
            - error
          description: |
            API Response Status:
              * `success` - Used when the request was processed successfully. Typically `2XX`.
              * `failure` - Used when it's the client's fault i.e.
                          They can change the request parameters and retry. Typically `4XX`.
              * `error` - Used for unexpected server errors. Typically `5XX`.
        message:
          type: string
        data:
          type: object
      required:
        - status
        - message
        - data
    Channel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        category:
          type: string
          enum:
            - PEER
            - GROUP
            - CHANNEL
      required:
        - id
        - name
        - category
    NewChannel:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        category:
          type: string
          enum:
            - PEER
            - GROUP
            - CHANNEL
      required:
        - name
        - category
    NewUser:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
    NewMembership:
      type: object
      properties:
        userID:
          type: string
        channelID:
          type: string
      required:
        - id
    Membership:
      type: object
      properties:
        id:
          type: string
        userID:
          type: string
        channelID:
          type: string
      required:
        - id
